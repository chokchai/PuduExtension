// Generated by CoffeeScript 1.6.3
(function() {
  var pudu;

  pudu = {};

  pudu.stickerKeyHost = 'http://pudux.googlecode.com/git/k/';

  pudu.stickerImgHost = 'http://pudux.googlecode.com/git/i/';

  pudu.defaultSetting = {
    version: '1.1.0',
    selectedStickers: ['sticker1', 'sticker1001', 'sticker1002', 'sticker1003', 'sticker1004', 'sticker1038'],
    lastUsedEmoSet: '#pudu-emo-smiley'
  };

  pudu.setLocalStorage = function(data, func) {
    if (func == null) {
      func = function() {};
    }
    return chrome.storage.local.set(data, func);
  };

  pudu.getLocalStorage = function(func) {
    return chrome.storage.local.get(func);
  };

  pudu.clearLocalStorage = function(func) {
    if (func == null) {
      func = function() {};
    }
    return chrome.storage.local.clear(func);
  };

  pudu.removeLocalStorage = function(key, func) {
    if (func == null) {
      func = function() {};
    }
    return chrome.storage.local.remove(key, func);
  };

  pudu.getExtensionUrl = function(uri) {
    return chrome.extension.getURL(uri);
  };

  pudu.isOptionEnable = function(optionName, onEnable, onDisable) {
    if (onDisable == null) {
      onDisable = function() {};
    }
    return pudu.getLocalStorage(function(items) {
      if (items[optionName] === void 0 || items[optionName] === true) {
        return onEnable();
      } else {
        return onDisable();
      }
    });
  };

  pudu.getOptionBoolean = function(optionName, callback) {
    return pudu.isOptionEnable(optionName, (function() {
      return callback(true);
    }), (function() {
      return callback(false);
    }));
  };

  pudu.versionCompare = function(left, right) {
    var a, b, i, len;
    if (typeof left + typeof right !== 'stringstring') {
      return false;
    }
    a = left.split('.');
    b = right.split('.');
    i = 0;
    len = Math.max(a.length, b.length);
    while (i < len) {
      if ((a[i] && !b[i] && parseInt(a[i]) > 0) || (parseInt(a[i]) > parseInt(b[i]))) {
        return 1;
      } else if ((b[i] && !a[i] && parseInt(b[i]) > 0) || (parseInt(a[i]) < parseInt(b[i]))) {
        return -1;
      }
      i++;
    }
    return 0;
  };

  pudu.getLocalStorage(function(items) {
    if (items.version === void 0) {
      return pudu.setLocalStorage(pudu.defaultSetting, function() {
        return window.location.href = window.location.href;
      });
    } else if (pudu.versionCompare(items.version, pudu.defaultSetting.version) === -1) {
      items.version = pudu.defaultSetting.version;
      return pudu.setLocalStorage($.extend(pudu.defaultSetting, items), function() {
        return window.location.href = window.location.href;
      });
    }
  });

  window.pudu = pudu;

}).call(this);

/*
//@ sourceMappingURL=pudu.config.map
*/
